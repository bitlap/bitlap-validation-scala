<?xml version="1.0" encoding="UTF-8"?>
<constraint-mappings
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://jboss.org/xml/ns/javax/validation/mapping validation-mapping-1.0.xsd"
        xmlns="http://jboss.org/xml/ns/javax/validation/mapping">

    <!-- jakarta.validation annotations -->
    <constraint-definition annotation="jakarta.validation.constraints.AssertFalse">
        <validated-by include-existing-validators="true">
            <value>bitlap.validation.AssertFalseValidatorForOption</value>
        </validated-by>
    </constraint-definition>

    <constraint-definition annotation="jakarta.validation.constraints.AssertTrue">
        <validated-by include-existing-validators="true">
            <value>bitlap.validation.AssertTrueValidatorForOption</value>
        </validated-by>
    </constraint-definition>

    <constraint-definition annotation="jakarta.validation.constraints.DecimalMax">
        <validated-by include-existing-validators="true">
            <value>bitlap.validation.DecimalMaxValidatorForOption</value>
        </validated-by>
    </constraint-definition>

    <constraint-definition annotation="jakarta.validation.constraints.DecimalMin">
        <validated-by include-existing-validators="true">
            <value>bitlap.validation.DecimalMinValidatorForOption</value>
        </validated-by>
    </constraint-definition>

    <constraint-definition annotation="jakarta.validation.constraints.Digits">
        <validated-by include-existing-validators="true">
            <value>bitlap.validation.DigitsValidatorForOption</value>
        </validated-by>
    </constraint-definition>


    <constraint-definition annotation="jakarta.validation.constraints.FutureOrPresent">
        <validated-by include-existing-validators="true">
            <value>bitlap.validation.FutureOrPresentValidatorForOption</value>
        </validated-by>
    </constraint-definition>


    <constraint-definition annotation="jakarta.validation.constraints.Future">
        <validated-by include-existing-validators="true">
            <value>bitlap.validation.FutureValidatorForOption</value>
        </validated-by>
    </constraint-definition>

    <constraint-definition annotation="jakarta.validation.constraints.Max">
        <validated-by include-existing-validators="true">
            <value>bitlap.validation.MaxValidatorForOption</value>
        </validated-by>
    </constraint-definition>

    <constraint-definition annotation="jakarta.validation.constraints.Min">
        <validated-by include-existing-validators="true">
            <value>bitlap.validation.MinValidatorForOption</value>
        </validated-by>
    </constraint-definition>

    <constraint-definition annotation="jakarta.validation.constraints.Past">
        <validated-by include-existing-validators="true">
            <value>bitlap.validation.PastValidatorForOption</value>
        </validated-by>
    </constraint-definition>

    <constraint-definition annotation="jakarta.validation.constraints.PastOrPresent">
        <validated-by include-existing-validators="true">
            <value>bitlap.validation.PastOrPresentValidatorForOption</value>
        </validated-by>
    </constraint-definition>

    <constraint-definition annotation="jakarta.validation.constraints.Pattern">
        <validated-by include-existing-validators="true">
            <value>bitlap.validation.PatternValidatorForOption</value>
        </validated-by>
    </constraint-definition>

    <constraint-definition annotation="jakarta.validation.constraints.Size">
        <validated-by include-existing-validators="true">
            <value>bitlap.validation.SizeValidatorForOption</value>
            <value>bitlap.validation.SizeValidatorForMap</value>
            <value>bitlap.validation.SizeValidatorForSeq</value>
            <value>bitlap.validation.SizeValidatorForSet</value>
        </validated-by>
    </constraint-definition>

    <constraint-definition annotation="jakarta.validation.constraints.Email">
        <validated-by include-existing-validators="true">
            <value>bitlap.validation.EmailValidatorForOption</value>
        </validated-by>
    </constraint-definition>

    <constraint-definition annotation="jakarta.validation.constraints.NotBlank">
        <validated-by include-existing-validators="true">
            <value>bitlap.validation.NotBlankValidatorForOption</value>
        </validated-by>
    </constraint-definition>

    <constraint-definition annotation="jakarta.validation.constraints.NotEmpty">
        <validated-by include-existing-validators="true">
            <value>bitlap.validation.NotEmptyValidatorForOption</value>
        </validated-by>
    </constraint-definition>
    
    <constraint-definition annotation="jakarta.validation.constraints.Positive">
        <validated-by include-existing-validators="true">
            <value>bitlap.validation.PositiveValidatorForOption</value>
        </validated-by>
    </constraint-definition>
    
    <constraint-definition annotation="jakarta.validation.constraints.PositiveOrZero">
        <validated-by include-existing-validators="true">
            <value>bitlap.validation.PositiveOrZeroValidatorForOption</value>
        </validated-by>
    </constraint-definition>

    <constraint-definition annotation="jakarta.validation.constraints.Negative">
        <validated-by include-existing-validators="true">
            <value>bitlap.validation.NegativeValidatorForOption</value>
        </validated-by>
    </constraint-definition>
    
    <constraint-definition annotation="jakarta.validation.constraints.NegativeOrZero">
        <validated-by include-existing-validators="true">
            <value>bitlap.validation.NegativeOrZeroValidatorForOption</value>
        </validated-by>
    </constraint-definition>
    
    <!-- hibernate annotations -->

    <!-- CreditCardNumber is combined annotation. -->

    <constraint-definition annotation="org.hibernate.validator.constraints.EAN">
        <validated-by include-existing-validators="true">
            <value>bitlap.validation.EANValidatorForOption</value>
        </validated-by>
    </constraint-definition>

    <constraint-definition annotation="org.hibernate.validator.constraints.Length">
        <validated-by include-existing-validators="true">
            <value>bitlap.validation.LengthValidatorForOption</value>
        </validated-by>
    </constraint-definition>

    <constraint-definition annotation="org.hibernate.validator.constraints.LuhnCheck">
        <validated-by include-existing-validators="true">
            <value>bitlap.validation.LuhnCheckValidatorForOption</value>
        </validated-by>
    </constraint-definition>

    <constraint-definition annotation="org.hibernate.validator.constraints.Mod10Check">
        <validated-by include-existing-validators="true">
            <value>bitlap.validation.Mod10CheckValidatorForOption</value>
        </validated-by>
    </constraint-definition>

    <constraint-definition annotation="org.hibernate.validator.constraints.Mod11Check">
        <validated-by include-existing-validators="true">
            <value>bitlap.validation.Mod11CheckValidatorForOption</value>
        </validated-by>
    </constraint-definition>
    <!-- ScriptAssert -->

    <constraint-definition annotation="org.hibernate.validator.constraints.URL">
        <validated-by include-existing-validators="true">
            <value>bitlap.validation.URLValidatorForOption</value>
        </validated-by>
    </constraint-definition>

    <!-- Original annotations -->
    <constraint-definition annotation="bitlap.validation.constraints.AssertNone">
        <validated-by>
            <value>bitlap.validation.AssertNoneValidator</value>
        </validated-by>
    </constraint-definition>

    <constraint-definition annotation="bitlap.validation.constraints.AssertSome">
        <validated-by>
            <value>bitlap.validation.AssertSomeValidator</value>
        </validated-by>
    </constraint-definition>

    <constraint-definition annotation="bitlap.validation.constraints.ByteSize">
        <validated-by>
            <value>bitlap.validation.ByteSizeValidator</value>
        </validated-by>
    </constraint-definition>


</constraint-mappings>
